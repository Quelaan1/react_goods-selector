{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGoods","ClearButton","setState","word","this","className","type","onClick","map","good","classNames","button","switcher","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,OAFnB,EAKEC,YAAc,WACZ,EAAKC,SAAS,CAAEF,cAAe,MANnC,8CASE,SAASG,GACHA,IAASC,KAAKL,MAAMC,cACtBI,KAAKF,SAAS,CAAEF,cAAe,KAE/BI,KAAKF,SAAS,CAAEF,cAAeG,MAbrC,oBAiBE,WAA2B,IAAD,OAChBH,EAAkBI,KAAKL,MAAvBC,cAER,OACE,uBAAMK,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGL,EAAa,UAAMA,EAAN,gBAAoC,oBAEjDA,GACC,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKH,iBAKpB,uBAAOI,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OAERJ,UAAWK,IAAW,CACpB,+BAAgCV,IAAkBS,IAJtD,UAOE,6BACE,wBACE,UACET,IAAkBS,EAAO,YAAc,eAEzCH,KAAK,SACLD,UAAWK,IAAW,CACpBC,OAAQX,IAAkBS,EAC1B,iBAAkBT,IAAkBS,IAEtCF,QAAS,kBAAM,EAAKK,SAASH,IAT/B,SAWGT,IAAkBS,EAAO,IAAM,QAIpC,oBACE,UAAQ,YACRJ,UAAU,eAFZ,SAIGI,MAzBEA,iBAxCrB,GAAyBI,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67f56c00.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: 'Jam',\n  };\n\n  ClearButton = () => {\n    this.setState({ selectedGoods: '' });\n  };\n\n  switcher(word: string) {\n    if (word === this.state.selectedGoods) {\n      this.setState({ selectedGoods: '' });\n    } else {\n      this.setState({ selectedGoods: word });\n    }\n  }\n\n  render(): React.ReactNode {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGoods ? `${selectedGoods} is selected` : 'No goods selected'}\n\n          {selectedGoods && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.ClearButton}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames({\n                  'has-background-success-light': selectedGoods === good,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      selectedGoods !== good ? 'AddButton' : 'RemoveButton'\n                    }\n                    type=\"button\"\n                    className={classNames({\n                      button: selectedGoods !== good,\n                      'button is-info': selectedGoods === good,\n                    })}\n                    onClick={() => this.switcher(good)}\n                  >\n                    {selectedGoods !== good ? '+' : '-'}\n                  </button>\n                </td>\n\n                <td\n                  data-cy=\"GoodTitle\"\n                  className=\"is-vcentered\"\n                >\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}